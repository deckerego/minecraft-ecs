Resources:
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: minecraft-${sls:stage}
      Tags:
        - Key: STAGE
          Value: ${sls:stage}

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: minecraft-role-exec-${sls:stage}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: minecraft-role-task-${sls:stage}
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: minecraft-sync-${sls:stage}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - s3:Get*
                  - s3:PutObject*
                  - s3:DeleteObject*
                  - s3:ListBucket*
                  - s3:ListMultipartUploadParts
                Resource:
                  - Fn::GetAtt: HelloWorldBucket.Arn
                  - Fn::Join:
                    - "/"
                    - - Fn::GetAtt: HelloWorldBucket.Arn
                      - "*"

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /minecraft/${sls:stage}
